//
//  CitiesRouter.swift
//  Clean Swift Test
//
//  Created by Ruslan Liulka on 25.04.2025.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol CitiesRoutingLogic
{
    func routeToCityDetails(at index: Int)
}

protocol CitiesDataPassing
{
    var dataStore: CitiesDataStore? { get }
}

class CitiesRouter: NSObject, CitiesRoutingLogic, CitiesDataPassing
{

    weak var viewController: CitiesViewController?
    var dataStore: CitiesDataStore?
    
    func routeToCityDetails(at index: Int) {
        guard let city = dataStore?.cities[index] else { return }
        
        let destinationVC = CityDetailsViewController()
        destinationVC.city = city
        viewController?.navigationController?.pushViewController(destinationVC, animated: true)
    }
    
    // MARK: Routing
    
    //func routeToSomewhere(segue: UIStoryboardSegue?)
    //{
    //  if let segue = segue {
    //    let destinationVC = segue.destination as! SomewhereViewController
    //    var destinationDS = destinationVC.router!.dataStore!
    //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
    //  } else {
    //    let storyboard = UIStoryboard(name: "Main", bundle: nil)
    //    let destinationVC = storyboard.instantiateViewController(withIdentifier: "SomewhereViewController") as! SomewhereViewController
    //    var destinationDS = destinationVC.router!.dataStore!
    //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
    //    navigateToSomewhere(source: viewController!, destination: destinationVC)
    //  }
    //}
    
    // MARK: Navigation

    
    
    //func navigateToSomewhere(source: CitiesViewController, destination: SomewhereViewController)
    //{
    //  source.show(destination, sender: nil)
    //}
    
    // MARK: Passing data
    
    //func passDataToSomewhere(source: CitiesDataStore, destination: inout SomewhereDataStore)
    //{
    //  destination.name = source.name
    //}
}

